apply plugin: 'java'
apply plugin: 'spring-boot'

def enc = 'UTF-8'
tasks.withType(AbstractCompile)*.options*.encoding = enc

buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE'
		classpath 'com.mysema.querydsl:querydsl-sql-codegen:3.6.1'
		classpath 'mysql:mysql-connector-java:5.1.34'
	}
}

repositories {
	jcenter()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-freemarker:1.2.1.RELEASE'
	compile 'org.springframework.boot:spring-boot-starter-jdbc:1.2.1.RELEASE'
	compile 'org.springframework.data:spring-data-oracle:1.1.0.RELEASE'
	compile 'com.mysema.querydsl:querydsl-sql:3.6.1'

    runtime 'org.hibernate:hibernate-validator:5.2.0.Beta1'
	runtime 'mysql:mysql-connector-java:5.1.34'
}

task generate << {
	def con = new com.mysql.jdbc.Driver().connect('jdbc:mysql://localhost/sample?user=root', null)

	def exporter = new com.mysema.query.sql.codegen.MetaDataExporter()

	def conf = new com.mysema.query.sql.Configuration(
		new com.mysema.query.sql.MySQLTemplates()
	)

    conf.register('product', 'price', BigDecimal)

	exporter.setConfiguration(conf)

	exporter.packageName = 'sample.entity'
	exporter.targetFolder = new File('src/main/java')

	exporter.export(con.metaData)

	con.close()
}
