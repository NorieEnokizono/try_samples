/**
 * This class is generated by jOOQ
 */
package sample.model.ticket.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.1"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketsRecord extends org.jooq.impl.UpdatableRecordImpl<sample.model.ticket.tables.records.TicketsRecord> implements org.jooq.Record3<java.lang.String, java.lang.Integer, java.lang.Integer> {

	private static final long serialVersionUID = -80825970;

	/**
	 * Setter for <code>ticket.tickets.ticket_code</code>.
	 */
	public void setTicketCode(java.lang.String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ticket.tickets.ticket_code</code>.
	 */
	public java.lang.String getTicketCode() {
		return (java.lang.String) getValue(0);
	}

	/**
	 * Setter for <code>ticket.tickets.total_limit</code>.
	 */
	public void setTotalLimit(java.lang.Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ticket.tickets.total_limit</code>.
	 */
	public java.lang.Integer getTotalLimit() {
		return (java.lang.Integer) getValue(1);
	}

	/**
	 * Setter for <code>ticket.tickets.users_limit</code>.
	 */
	public void setUsersLimit(java.lang.Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ticket.tickets.users_limit</code>.
	 */
	public java.lang.Integer getUsersLimit() {
		return (java.lang.Integer) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.String> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.String, java.lang.Integer, java.lang.Integer> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.lang.String, java.lang.Integer, java.lang.Integer> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field1() {
		return sample.model.ticket.tables.Tickets.TICKETS.TICKET_CODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field2() {
		return sample.model.ticket.tables.Tickets.TICKETS.TOTAL_LIMIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field3() {
		return sample.model.ticket.tables.Tickets.TICKETS.USERS_LIMIT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value1() {
		return getTicketCode();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value2() {
		return getTotalLimit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value3() {
		return getUsersLimit();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TicketsRecord value1(java.lang.String value) {
		setTicketCode(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TicketsRecord value2(java.lang.Integer value) {
		setTotalLimit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TicketsRecord value3(java.lang.Integer value) {
		setUsersLimit(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TicketsRecord values(java.lang.String value1, java.lang.Integer value2, java.lang.Integer value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TicketsRecord
	 */
	public TicketsRecord() {
		super(sample.model.ticket.tables.Tickets.TICKETS);
	}

	/**
	 * Create a detached, initialised TicketsRecord
	 */
	public TicketsRecord(java.lang.String ticketCode, java.lang.Integer totalLimit, java.lang.Integer usersLimit) {
		super(sample.model.ticket.tables.Tickets.TICKETS);

		setValue(0, ticketCode);
		setValue(1, totalLimit);
		setValue(2, usersLimit);
	}
}
