/**
 * This class is generated by jOOQ
 */
package sample.model.ticket.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.1"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsedTickets extends org.jooq.impl.TableImpl<sample.model.ticket.tables.records.UsedTicketsRecord> {

	private static final long serialVersionUID = -770660599;

	/**
	 * The reference instance of <code>ticket.used_tickets</code>
	 */
	public static final sample.model.ticket.tables.UsedTickets USED_TICKETS = new sample.model.ticket.tables.UsedTickets();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<sample.model.ticket.tables.records.UsedTicketsRecord> getRecordType() {
		return sample.model.ticket.tables.records.UsedTicketsRecord.class;
	}

	/**
	 * The column <code>ticket.used_tickets.ticket_code</code>.
	 */
	public final org.jooq.TableField<sample.model.ticket.tables.records.UsedTicketsRecord, java.lang.String> TICKET_CODE = createField("ticket_code", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

	/**
	 * The column <code>ticket.used_tickets.user_id</code>.
	 */
	public final org.jooq.TableField<sample.model.ticket.tables.records.UsedTicketsRecord, java.lang.String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR.length(10).nullable(false), this, "");

	/**
	 * The column <code>ticket.used_tickets.used_date</code>.
	 */
	public final org.jooq.TableField<sample.model.ticket.tables.records.UsedTicketsRecord, java.sql.Timestamp> USED_DATE = createField("used_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>ticket.used_tickets</code> table reference
	 */
	public UsedTickets() {
		this("used_tickets", null);
	}

	/**
	 * Create an aliased <code>ticket.used_tickets</code> table reference
	 */
	public UsedTickets(java.lang.String alias) {
		this(alias, sample.model.ticket.tables.UsedTickets.USED_TICKETS);
	}

	private UsedTickets(java.lang.String alias, org.jooq.Table<sample.model.ticket.tables.records.UsedTicketsRecord> aliased) {
		this(alias, aliased, null);
	}

	private UsedTickets(java.lang.String alias, org.jooq.Table<sample.model.ticket.tables.records.UsedTicketsRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, sample.model.ticket.Ticket.TICKET, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public sample.model.ticket.tables.UsedTickets as(java.lang.String alias) {
		return new sample.model.ticket.tables.UsedTickets(alias, this);
	}

	/**
	 * Rename this table
	 */
	public sample.model.ticket.tables.UsedTickets rename(java.lang.String name) {
		return new sample.model.ticket.tables.UsedTickets(name, null);
	}
}
